self.addEventListener('install', function (event) {
  // 'install' event is fired when the SW registration is successfully completed.
  console.log('[app-bc] is installed');
});
// self.addEventListener('message', (event) => {
//   if (event.data && event.data.type === 'MESSAGE_IDENTIFIER') {
//     console.log('AAAAAAAAAAAAAAAAAAAAAAAAA');
//     console.log('AAAAAAAAAAAAAAAAAAAAAAAAA');
//     console.log('AAAAAAAAAAAAAAAAAAAAAAAAA');
//     console.log('AAAAAAAAAAAAAAAAAAAAAAAAA');
//     console.log('AAAAAAAAAAAAAAAAAAAAAAAAA');
//     console.log('AAAAAAAAAAAAAAAAAAAAAAAAA');
//   }
// });

self.addEventListener('activate', function (event) {
  // 'activate' event is fired after 'install' event.
  console.log('[app-bc] is activated');
});
self.addEventListener('message', async (e) => {
  console.log(e);
  console.log(e.data);
  console.log(e.data);
});

self.addEventListener('paymentrequest', function (paymentrequestEvent) {
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');
  console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPayment request');

  console.log(
    '[app-bc] Got paymentrequest ' + JSON.stringify(paymentrequestEvent.data)
  );

  // Send back selected option to the payment requester (Payee/Merchant, PISP,...)
  paymentrequestEvent.respondWith(
    new Promise(function (resolve, reject) {
      try {
        // Retrive payment card options
        var optionIds = paymentrequestEvent.data.optionId.split(';');

        // Build Basic-Card response according to the specific BasicCardResponse dictionary model
        var basicCardResponse = {
          methodName: 'basic-card',
          details: {
            cardholderName: optionIds[0],
            cardNumber: optionIds[1],
            expiryMonth: optionIds[2],
            expiryYear: optionIds[3],
            cardSecurityCode: optionIds[4],
            billingAddress: null,
          },
        };

        // Callback Promise
        resolve(basicCardResponse);
      } catch (exception) {
        reject(exception);
      }
    })
  );
});

// self.addEventListener('install', function (event) {
//   console.log('[Service Worker] Installing Service Worker ...', event);
// });

// self.addEventListener('activate', function (event) {
//   console.log('[Service Worker] Activating Service Worker ...', event);
//   return self.clients.claim();
// });

// self.addEventListener('fetch', function (event) {
//   console.log('[Service Worker] Fetching something ....', event);
//   event.respondWith(fetch(event.request));
// });
